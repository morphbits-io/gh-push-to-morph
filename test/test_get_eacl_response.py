# coding: utf-8

"""
    Morph API

    REST API of the multi-node/multi-drive Morph object storage.

    The version of the OpenAPI document: v0.15.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_eacl_response import GetEaclResponse

class TestGetEaclResponse(unittest.TestCase):
    """GetEaclResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetEaclResponse:
        """Test GetEaclResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetEaclResponse`
        """
        model = GetEaclResponse()
        if include_optional:
            return GetEaclResponse(
                e_acl = openapi_client.models.eacl.EACL(
                    records = [
                        openapi_client.models.eacl_record.EACLRecord(
                            operation = [
                                'GET'
                                ], 
                            action = [
                                'ALLOW'
                                ], 
                            filters = [
                                openapi_client.models.record_filter.RecordFilter(
                                    header_type = [
                                        'REQUEST'
                                        ], 
                                    match_type = [
                                        'STRING_EQUAL'
                                        ], 
                                    key = '', 
                                    value = '', )
                                ], 
                            targets = [
                                openapi_client.models.record_target.RecordTarget(
                                    role = [
                                        'USER'
                                        ], 
                                    keys = [
                                        ''
                                        ], )
                                ], )
                        ], )
            )
        else:
            return GetEaclResponse(
                e_acl = openapi_client.models.eacl.EACL(
                    records = [
                        openapi_client.models.eacl_record.EACLRecord(
                            operation = [
                                'GET'
                                ], 
                            action = [
                                'ALLOW'
                                ], 
                            filters = [
                                openapi_client.models.record_filter.RecordFilter(
                                    header_type = [
                                        'REQUEST'
                                        ], 
                                    match_type = [
                                        'STRING_EQUAL'
                                        ], 
                                    key = '', 
                                    value = '', )
                                ], 
                            targets = [
                                openapi_client.models.record_target.RecordTarget(
                                    role = [
                                        'USER'
                                        ], 
                                    keys = [
                                        ''
                                        ], )
                                ], )
                        ], ),
        )
        """

    def testGetEaclResponse(self):
        """Test GetEaclResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
